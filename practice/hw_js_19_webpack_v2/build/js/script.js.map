{"version":3,"sources":["webpack:///script.js","webpack:///./script.js","webpack:///external \"_\""],"names":["script","webpackJsonp_name_","0","module","exports","__webpack_require__","serverData","template","google","bxslider","myscript","$","on","e","require","accordion","7","_"],"mappings":"AAAA,GAAIA,QACJC,oBAAoB,IAEdC,EACA,SAAUC,EAAQC,EAASC,GCJjC,YAEUA,GAAQ,EA+ClBD,GAAQE,WAAaA,WACrBF,EAAQG,SAAWA,SACnBH,EAAQI,OAASA,OACjBJ,EAAQK,SAAWA,SACnBL,EAAQM,SAAWA,SAEnBC,EAAE,cAAcC,GAAG,QAAS,oCAAqC,SAASC,GACtER,EAAAQ,EAAA,EAAmB,SAASC,GACxB,GAAIC,GAAYV,EAAQ,EAExBU,GAAUF,QDYZG,EACA,SAAUb,EAAQC,GExExBD,EAAAC,QAAAa","file":"script.js","sourcesContent":["var script =\nwebpackJsonp_name_([2],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(7);\n\t// const jqueryui = require('jqueryui');\n\t\n\t// import google from './routes/google';\n\t// import bxslider from './routes/bxslider';\n\t// import myscript from './routes/myscript'; // запись на ES6\n\t// import template from './routes/template';\n\t// const serverData = require('./routes/server');// запись на ES5\n\t// // const myscript = require('./myscript'); // запись на ES5\n\t// // const UglifyJSPlugin = require('./UglifyJSPlugin');\n\t// google();\n\t// bxslider();\n\t// myscript();\n\t\n\t//======\n\t// let moduleName = location.pathname.slice(1);\n\t// let route = require(\"./routes/\" + moduleName); // автоматическая подгрузка модулей с указанной директорииб вместо забитых руками выше каждый в отдельности, будет искать во всех поддиректориях\n\t// если надо только 1 папка без поддерикторий\n\t// let context = require.context('./routes/', false, /\\.js$/); // 1 - имя нашей папки,2 - нам не нужны поддериктории потому false. 3 - параметром можно указать регулярное выражениеб что б по например по расширению отфильтровать нужные файлы\n\t// let route = context('./' + moduleName); // автоматически подгружаем модули\n\t// route();\n\t//========\n\t\n\t// let moduleName = location.pathname.slice(1);\n\t// require('bundle!./routes/' + moduleName)(function(route) {\n\t//\n\t//     route();\n\t//\n\t// }); // не забываем установить npm i bundle-loader\n\t\n\t// let moduleName = location.pathname.slice(1);\n\t// let handler;\n\t// try {\n\t//     let context = require.context('bundle!./routes/', true, /^\\.\\//);\n\t//     handler = context('./' + moduleName);\n\t// } catch (e) {\n\t//     alert('No such path');\n\t// }\n\t//\n\t// if (handler) {\n\t//     handler(function(route) {\n\t//         route();\n\t//     });\n\t// }\n\t\n\t// UglifyJSPlugin();\n\t\n\texports.serverData = serverData;\n\texports.template = template;\n\texports.google = google;\n\texports.bxslider = bxslider;\n\texports.myscript = myscript;\n\t\n\t$('.accordion').on('click', '.accordion-panel, .accordion-plus', function (e) {\n\t    __webpack_require__.e/* nsure */(3, function (require) {\n\t        var accordion = __webpack_require__(8);\n\t        // exports.accordion = accordion;\n\t        accordion(e);\n\t    }); // если несколько эншуров будет иметь однинаковый 3 параметр, в данном случае 'accord'  то они объеденятся в 1 сборку с именем 'accord'\n\t});\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, exports) {\n\n\tmodule.exports = _;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// script.js","'use strict';\r\n\r\nconst _ = require('lodash');\r\n// const jqueryui = require('jqueryui');\r\n\r\n// import google from './routes/google';\r\n// import bxslider from './routes/bxslider';\r\n// import myscript from './routes/myscript'; // запись на ES6\r\n// import template from './routes/template';\r\n// const serverData = require('./routes/server');// запись на ES5\r\n// // const myscript = require('./myscript'); // запись на ES5\r\n// // const UglifyJSPlugin = require('./UglifyJSPlugin');\r\n// google();\r\n// bxslider();\r\n// myscript();\r\n\r\n//======\r\n// let moduleName = location.pathname.slice(1);\r\n// let route = require(\"./routes/\" + moduleName); // автоматическая подгрузка модулей с указанной директорииб вместо забитых руками выше каждый в отдельности, будет искать во всех поддиректориях\r\n// если надо только 1 папка без поддерикторий\r\n// let context = require.context('./routes/', false, /\\.js$/); // 1 - имя нашей папки,2 - нам не нужны поддериктории потому false. 3 - параметром можно указать регулярное выражениеб что б по например по расширению отфильтровать нужные файлы\r\n// let route = context('./' + moduleName); // автоматически подгружаем модули\r\n// route();\r\n//========\r\n\r\n// let moduleName = location.pathname.slice(1);\r\n// require('bundle!./routes/' + moduleName)(function(route) {\r\n//\r\n//     route();\r\n//\r\n// }); // не забываем установить npm i bundle-loader\r\n\r\n// let moduleName = location.pathname.slice(1);\r\n// let handler;\r\n// try {\r\n//     let context = require.context('bundle!./routes/', true, /^\\.\\//);\r\n//     handler = context('./' + moduleName);\r\n// } catch (e) {\r\n//     alert('No such path');\r\n// }\r\n//\r\n// if (handler) {\r\n//     handler(function(route) {\r\n//         route();\r\n//     });\r\n// }\r\n\r\n// UglifyJSPlugin();\r\n\r\nexports.serverData = serverData;\r\nexports.template = template;\r\nexports.google = google;\r\nexports.bxslider = bxslider;\r\nexports.myscript = myscript;\r\n\r\n$('.accordion').on('click', '.accordion-panel, .accordion-plus', function(e) {\r\n    require.ensure([], function(require) {\r\n        let accordion = require('./no_routes/accordion');\r\n        // exports.accordion = accordion;\r\n        accordion(e);\r\n    }, 'accord'); // если несколько эншуров будет иметь однинаковый 3 параметр, в данном случае 'accord'  то они объеденятся в 1 сборку с именем 'accord'\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./script.js","module.exports = _;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"_\"\n// module id = 7\n// module chunks = 2"],"sourceRoot":""}