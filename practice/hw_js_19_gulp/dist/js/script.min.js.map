{"version":3,"sources":["google.js","jquery.bxslider.js","script.js","template.js"],"names":["$","gcse","document","createElement","type","cx","getElementsByTagName","insertBefore","s","defaults","mode","slideSelector","infiniteLoop","hideControlOnEnd","speed","easing","slideMargin","startSlide","randomStart","captions","ticker","tickerHover","adaptiveHeight","adaptiveHeightSpeed","video","useCSS","preloadImages","responsive","touchEnabled","swipeThreshold","oneToOneTouch","ariaLive","ariaHidden","keyboardEnabled","pager","pagerType","pagerShortSeparator","pagerSelector","controls","nextText","prevText","nextSelector","prevSelector","autoControls","startText","stopText","auto","pause","autoStart","autoDirection","stopAutoOnClick","autoHover","minSlides","maxSlides","moveSlides","onSliderLoad","onSlideBefore","onSlideNext","onSlidePrev","onSlideAfter","options","this","length","each","onSliderResize","slider","el","windowWidth","window","width","windowHeight","height","data","bxSlider","init","settings","extend","slideWidth","parseInt","children","Math","floor","random","active","index","carousel","minThreshold","maxThreshold","working","interval","div","props","i","undefined","style","cssPrefix","toLowerCase","animProp","attr","setup","preloadSelector","eq","wrap","wrapperClass","viewport","loader","prepend","css","usingCSS","position","parent","getViewportMaxWidth","float","listStyle","getSlideWidth","zIndex","slideZIndex","display","appendCaptions","last","getPagerQty","fitVids","maxWidth","appendControls","appendControlsAuto","appendPager","after","start","loadElements","selector","callback","find","one","count","total","complete","trigger","sliceAppend","slice","clone","addClass","slicePrepend","append","setSlidePosition","getViewportHeight","call","bind","resizeWindow","autoSlideForOnePage","initAuto","initTicker","updatePagerActive","updateDirectionControls","initTouch","getMoveBy","currentIndex","add","redrawSlider","get","parseFloat","keyPress","wrapWidth","newElWidth","shrinkItems","ceil","getNumberSlidesShowing","slidesShowing","childWidth","first","breakPoint","counter","pagerQty","lastChild","setPositionProperty","left","outerWidth","lastShowingIndex","top","value","duration","params","animateObj","propValue","e","target","is","unbind","resetValue","tickerLoop","animate","updateAfterSlideTransition","populatePager","linkContent","isFunction","pagerCustom","buildPager","pagerEl","pagerHtml","html","on","clickPagerBind","next","prev","clickNextBind","clickPrevBind","directionEl","stop","autoEl","clickStartBind","clickStopBind","autoControlsCombine","autoControlsSelector","updateAutoControls","title","stopAuto","preventDefault","hasClass","pagerLink","currentTarget","pagerIndex","goToSlide","slideIndex","len","removeClass","startAuto","oldIndex","state","hover","idx","ratio","property","newSpeed","totalDimens","startPosition","transform","split","outerHeight","abs","autoDelay","timeout","setTimeout","resumeSpeed","reset","animateProperty","autoPaused","isOnScreen","win","scrollTop","scrollLeft","bounds","bottom","right","tagName","exec","keyCode","touch","x","y","onTouchStart","originalPos","orig","originalEvent","touchPoints","changedTouches","pageX","pointerId","setPointerCapture","onTouchMove","onTouchEnd","onPointerCancel","offset","releasePointerCapture","xMovement","tagFilters","yMovement","RegExp","activeElementTag","pageY","result","change","preventDefaultSwipeX","preventDefaultSwipeY","end","distance","goToPrevSlide","goToNextSlide","initialized","windowHeightNew","windowWidthNew","numberOfSlidesShowing","startVisibleIndex","setSlideIndex","direction","requestEl","performTransition","filter","fadeOut","fadeIn","moveBy","applyAriaHiddenAttributes","preventControlUpdate","setInterval","clearInterval","getCurrentSlide","getCurrentSlideElement","getSlideElement","destroySlider","removeAttr","unwrap","remove","removeData","reloadSlider","$ServerData","id","month","day","imageSrc","author","coments","text","$Server","JSON","stringify","$html","parse","$dataTmpl","$data","$jsData","$content","tmpl","Element","elem","className","cache","str","fn","test","Function","replace","join","getElementById","innerHTML"],"mappings":"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","file":"script.min.js","sourcesContent":["$(function () {\n    'use strict';\n  (function() {\n    var cx = '012577494148929298528:dq_ytgguf-c';\n    var gcse = document.createElement('script');\n    gcse.type = 'text/javascript';\n    gcse.async = true;\n    gcse.src = 'https://cse.google.com/cse.js?cx=' + cx;\n    var s = document.getElementsByTagName('script')[0];\n    s.parentNode.insertBefore(gcse, s);\n  })();\n});\n","/**\n * bxSlider v4.2.12\n * Copyright 2013-2015 Steven Wanderski\n * Written while drinking Belgian ales and listening to jazz\n * Licensed under MIT (http://opensource.org/licenses/MIT)\n */\n\n;(function($) {\n\n  var defaults = {\n\n    // GENERAL\n    mode: 'horizontal',\n    slideSelector: '',\n    infiniteLoop: true,\n    hideControlOnEnd: false,\n    speed: 500,\n    easing: null,\n    slideMargin: 0,\n    startSlide: 0,\n    randomStart: false,\n    captions: false,\n    ticker: false,\n    tickerHover: false,\n    adaptiveHeight: false,\n    adaptiveHeightSpeed: 500,\n    video: false,\n    useCSS: true,\n    preloadImages: 'visible',\n    responsive: true,\n    slideZIndex: 50,\n    wrapperClass: 'bx-wrapper',\n\n    // TOUCH\n    touchEnabled: true,\n    swipeThreshold: 50,\n    oneToOneTouch: true,\n    preventDefaultSwipeX: true,\n    preventDefaultSwipeY: false,\n\n    // ACCESSIBILITY\n    ariaLive: true,\n    ariaHidden: true,\n\n    // KEYBOARD\n    keyboardEnabled: false,\n\n    // PAGER\n    pager: true,\n    pagerType: 'full',\n    pagerShortSeparator: ' / ',\n    pagerSelector: null,\n    buildPager: null,\n    pagerCustom: null,\n\n    // CONTROLS\n    controls: true,\n    nextText: 'Next',\n    prevText: 'Prev',\n    nextSelector: null,\n    prevSelector: null,\n    autoControls: false,\n    startText: 'Start',\n    stopText: 'Stop',\n    autoControlsCombine: false,\n    autoControlsSelector: null,\n\n    // AUTO\n    auto: false,\n    pause: 4000,\n    autoStart: true,\n    autoDirection: 'next',\n    stopAutoOnClick: false,\n    autoHover: false,\n    autoDelay: 0,\n    autoSlideForOnePage: false,\n\n    // CAROUSEL\n    minSlides: 1,\n    maxSlides: 1,\n    moveSlides: 0,\n    slideWidth: 0,\n    shrinkItems: false,\n\n    // CALLBACKS\n    onSliderLoad: function() { return true; },\n    onSlideBefore: function() { return true; },\n    onSlideAfter: function() { return true; },\n    onSlideNext: function() { return true; },\n    onSlidePrev: function() { return true; },\n    onSliderResize: function() { return true; }\n  };\n\n  $.fn.bxSlider = function(options) {\n\n    if (this.length === 0) {\n      return this;\n    }\n\n    // support multiple elements\n    if (this.length > 1) {\n      this.each(function() {\n        $(this).bxSlider(options);\n      });\n      return this;\n    }\n\n    // create a namespace to be used throughout the plugin\n    var slider = {},\n    // set a reference to our slider element\n    el = this,\n    // get the original window dimens (thanks a lot IE)\n    windowWidth = $(window).width(),\n    windowHeight = $(window).height();\n\n    // Return if slider is already initialized\n    if ($(el).data('bxSlider')) { return; }\n\n    /**\n     * ===================================================================================\n     * = PRIVATE FUNCTIONS\n     * ===================================================================================\n     */\n\n    /**\n     * Initializes namespace settings to be used throughout plugin\n     */\n    var init = function() {\n      // Return if slider is already initialized\n      if ($(el).data('bxSlider')) { return; }\n      // merge user-supplied options with the defaults\n      slider.settings = $.extend({}, defaults, options);\n      // parse slideWidth setting\n      slider.settings.slideWidth = parseInt(slider.settings.slideWidth);\n      // store the original children\n      slider.children = el.children(slider.settings.slideSelector);\n      // check if actual number of slides is less than minSlides / maxSlides\n      if (slider.children.length < slider.settings.minSlides) { slider.settings.minSlides = slider.children.length; }\n      if (slider.children.length < slider.settings.maxSlides) { slider.settings.maxSlides = slider.children.length; }\n      // if random start, set the startSlide setting to random number\n      if (slider.settings.randomStart) { slider.settings.startSlide = Math.floor(Math.random() * slider.children.length); }\n      // store active slide information\n      slider.active = { index: slider.settings.startSlide };\n      // store if the slider is in carousel mode (displaying / moving multiple slides)\n      slider.carousel = slider.settings.minSlides > 1 || slider.settings.maxSlides > 1 ? true : false;\n      // if carousel, force preloadImages = 'all'\n      if (slider.carousel) { slider.settings.preloadImages = 'all'; }\n      // calculate the min / max width thresholds based on min / max number of slides\n      // used to setup and update carousel slides dimensions\n      slider.minThreshold = (slider.settings.minSlides * slider.settings.slideWidth) + ((slider.settings.minSlides - 1) * slider.settings.slideMargin);\n      slider.maxThreshold = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n      // store the current state of the slider (if currently animating, working is true)\n      slider.working = false;\n      // initialize the controls object\n      slider.controls = {};\n      // initialize an auto interval\n      slider.interval = null;\n      // determine which property to use for transitions\n      slider.animProp = slider.settings.mode === 'vertical' ? 'top' : 'left';\n      // determine if hardware acceleration can be used\n      slider.usingCSS = slider.settings.useCSS && slider.settings.mode !== 'fade' && (function() {\n        // create our test div element\n        var div = document.createElement('div'),\n        // css transition properties\n        props = ['WebkitPerspective', 'MozPerspective', 'OPerspective', 'msPerspective'];\n        // test for each property\n        for (var i = 0; i < props.length; i++) {\n          if (div.style[props[i]] !== undefined) {\n            slider.cssPrefix = props[i].replace('Perspective', '').toLowerCase();\n            slider.animProp = '-' + slider.cssPrefix + '-transform';\n            return true;\n          }\n        }\n        return false;\n      }());\n      // if vertical mode always make maxSlides and minSlides equal\n      if (slider.settings.mode === 'vertical') { slider.settings.maxSlides = slider.settings.minSlides; }\n      // save original style data\n      el.data('origStyle', el.attr('style'));\n      el.children(slider.settings.slideSelector).each(function() {\n        $(this).data('origStyle', $(this).attr('style'));\n      });\n\n      // perform all DOM / CSS modifications\n      setup();\n    };\n\n    /**\n     * Performs all DOM and CSS modifications\n     */\n    var setup = function() {\n      var preloadSelector = slider.children.eq(slider.settings.startSlide); // set the default preload selector (visible)\n\n      // wrap el in a wrapper\n      el.wrap('<div class=\"' + slider.settings.wrapperClass + '\"><div class=\"bx-viewport\"></div></div>');\n      // store a namespace reference to .bx-viewport\n      slider.viewport = el.parent();\n\n      // add aria-live if the setting is enabled and ticker mode is disabled\n      if (slider.settings.ariaLive && !slider.settings.ticker) {\n        slider.viewport.attr('aria-live', 'polite');\n      }\n      // add a loading div to display while images are loading\n      slider.loader = $('<div class=\"bx-loading\" />');\n      slider.viewport.prepend(slider.loader);\n      // set el to a massive width, to hold any needed slides\n      // also strip any margin and padding from el\n      el.css({\n        width: slider.settings.mode === 'horizontal' ? (slider.children.length * 1000 + 215) + '%' : 'auto',\n        position: 'relative'\n      });\n      // if using CSS, add the easing property\n      if (slider.usingCSS && slider.settings.easing) {\n        el.css('-' + slider.cssPrefix + '-transition-timing-function', slider.settings.easing);\n      // if not using CSS and no easing value was supplied, use the default JS animation easing (swing)\n      } else if (!slider.settings.easing) {\n        slider.settings.easing = 'swing';\n      }\n      // make modifications to the viewport (.bx-viewport)\n      slider.viewport.css({\n        width: '100%',\n        overflow: 'hidden',\n        position: 'relative'\n      });\n      slider.viewport.parent().css({\n        maxWidth: getViewportMaxWidth()\n      });\n      // apply css to all slider children\n      slider.children.css({\n        float: slider.settings.mode === 'horizontal' ? 'left' : 'none',\n        listStyle: 'none',\n        position: 'relative'\n      });\n      // apply the calculated width after the float is applied to prevent scrollbar interference\n      slider.children.css('width', getSlideWidth());\n      // if slideMargin is supplied, add the css\n      if (slider.settings.mode === 'horizontal' && slider.settings.slideMargin > 0) { slider.children.css('marginRight', slider.settings.slideMargin); }\n      if (slider.settings.mode === 'vertical' && slider.settings.slideMargin > 0) { slider.children.css('marginBottom', slider.settings.slideMargin); }\n      // if \"fade\" mode, add positioning and z-index CSS\n      if (slider.settings.mode === 'fade') {\n        slider.children.css({\n          position: 'absolute',\n          zIndex: 0,\n          display: 'none'\n        });\n        // prepare the z-index on the showing element\n        slider.children.eq(slider.settings.startSlide).css({zIndex: slider.settings.slideZIndex, display: 'block'});\n      }\n      // create an element to contain all slider controls (pager, start / stop, etc)\n      slider.controls.el = $('<div class=\"bx-controls\" />');\n      // if captions are requested, add them\n      if (slider.settings.captions) { appendCaptions(); }\n      // check if startSlide is last slide\n      slider.active.last = slider.settings.startSlide === getPagerQty() - 1;\n      // if video is true, set up the fitVids plugin\n      if (slider.settings.video) { el.fitVids(); }\n      if (slider.settings.preloadImages === 'all' || slider.settings.ticker) { preloadSelector = slider.children; }\n      // only check for control addition if not in \"ticker\" mode\n      if (!slider.settings.ticker) {\n        // if controls are requested, add them\n        if (slider.settings.controls) { appendControls(); }\n        // if auto is true, and auto controls are requested, add them\n        if (slider.settings.auto && slider.settings.autoControls) { appendControlsAuto(); }\n        // if pager is requested, add it\n        if (slider.settings.pager) { appendPager(); }\n        // if any control option is requested, add the controls wrapper\n        if (slider.settings.controls || slider.settings.autoControls || slider.settings.pager) { slider.viewport.after(slider.controls.el); }\n      // if ticker mode, do not allow a pager\n      } else {\n        slider.settings.pager = false;\n      }\n      loadElements(preloadSelector, start);\n    };\n\n    var loadElements = function(selector, callback) {\n      var total = selector.find('img:not([src=\"\"]), iframe').length,\n      count = 0;\n      if (total === 0) {\n        callback();\n        return;\n      }\n      selector.find('img:not([src=\"\"]), iframe').each(function() {\n        $(this).one('load error', function() {\n          if (++count === total) { callback(); }\n        }).each(function() {\n          if (this.complete) { $(this).trigger('load'); }\n        });\n      });\n    };\n\n    /**\n     * Start the slider\n     */\n    var start = function() {\n      // if infinite loop, prepare additional slides\n      if (slider.settings.infiniteLoop && slider.settings.mode !== 'fade' && !slider.settings.ticker) {\n        var slice    = slider.settings.mode === 'vertical' ? slider.settings.minSlides : slider.settings.maxSlides,\n        sliceAppend  = slider.children.slice(0, slice).clone(true).addClass('bx-clone'),\n        slicePrepend = slider.children.slice(-slice).clone(true).addClass('bx-clone');\n        if (slider.settings.ariaHidden) {\n          sliceAppend.attr('aria-hidden', true);\n          slicePrepend.attr('aria-hidden', true);\n        }\n        el.append(sliceAppend).prepend(slicePrepend);\n      }\n      // remove the loading DOM element\n      slider.loader.remove();\n      // set the left / top position of \"el\"\n      setSlidePosition();\n      // if \"vertical\" mode, always use adaptiveHeight to prevent odd behavior\n      if (slider.settings.mode === 'vertical') { slider.settings.adaptiveHeight = true; }\n      // set the viewport height\n      slider.viewport.height(getViewportHeight());\n      // make sure everything is positioned just right (same as a window resize)\n      el.redrawSlider();\n      // onSliderLoad callback\n      slider.settings.onSliderLoad.call(el, slider.active.index);\n      // slider has been fully initialized\n      slider.initialized = true;\n      // bind the resize call to the window\n      if (slider.settings.responsive) { $(window).bind('resize', resizeWindow); }\n      // if auto is true and has more than 1 page, start the show\n      if (slider.settings.auto && slider.settings.autoStart && (getPagerQty() > 1 || slider.settings.autoSlideForOnePage)) { initAuto(); }\n      // if ticker is true, start the ticker\n      if (slider.settings.ticker) { initTicker(); }\n      // if pager is requested, make the appropriate pager link active\n      if (slider.settings.pager) { updatePagerActive(slider.settings.startSlide); }\n      // check for any updates to the controls (like hideControlOnEnd updates)\n      if (slider.settings.controls) { updateDirectionControls(); }\n      // if touchEnabled is true, setup the touch events\n      if (slider.settings.touchEnabled && !slider.settings.ticker) { initTouch(); }\n      // if keyboardEnabled is true, setup the keyboard events\n      if (slider.settings.keyboardEnabled && !slider.settings.ticker) {\n        $(document).keydown(keyPress);\n      }\n    };\n\n    /**\n     * Returns the calculated height of the viewport, used to determine either adaptiveHeight or the maxHeight value\n     */\n    var getViewportHeight = function() {\n      var height = 0;\n      // first determine which children (slides) should be used in our height calculation\n      var children = $();\n      // if mode is not \"vertical\" and adaptiveHeight is false, include all children\n      if (slider.settings.mode !== 'vertical' && !slider.settings.adaptiveHeight) {\n        children = slider.children;\n      } else {\n        // if not carousel, return the single active child\n        if (!slider.carousel) {\n          children = slider.children.eq(slider.active.index);\n        // if carousel, return a slice of children\n        } else {\n          // get the individual slide index\n          var currentIndex = slider.settings.moveSlides === 1 ? slider.active.index : slider.active.index * getMoveBy();\n          // add the current slide to the children\n          children = slider.children.eq(currentIndex);\n          // cycle through the remaining \"showing\" slides\n          for (i = 1; i <= slider.settings.maxSlides - 1; i++) {\n            // if looped back to the start\n            if (currentIndex + i >= slider.children.length) {\n              children = children.add(slider.children.eq(i - 1));\n            } else {\n              children = children.add(slider.children.eq(currentIndex + i));\n            }\n          }\n        }\n      }\n      // if \"vertical\" mode, calculate the sum of the heights of the children\n      if (slider.settings.mode === 'vertical') {\n        children.each(function(index) {\n          height += $(this).outerHeight();\n        });\n        // add user-supplied margins\n        if (slider.settings.slideMargin > 0) {\n          height += slider.settings.slideMargin * (slider.settings.minSlides - 1);\n        }\n      // if not \"vertical\" mode, calculate the max height of the children\n      } else {\n        height = Math.max.apply(Math, children.map(function() {\n          return $(this).outerHeight(false);\n        }).get());\n      }\n\n      if (slider.viewport.css('box-sizing') === 'border-box') {\n        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom')) +\n              parseFloat(slider.viewport.css('border-top-width')) + parseFloat(slider.viewport.css('border-bottom-width'));\n      } else if (slider.viewport.css('box-sizing') === 'padding-box') {\n        height += parseFloat(slider.viewport.css('padding-top')) + parseFloat(slider.viewport.css('padding-bottom'));\n      }\n\n      return height;\n    };\n\n    /**\n     * Returns the calculated width to be used for the outer wrapper / viewport\n     */\n    var getViewportMaxWidth = function() {\n      var width = '100%';\n      if (slider.settings.slideWidth > 0) {\n        if (slider.settings.mode === 'horizontal') {\n          width = (slider.settings.maxSlides * slider.settings.slideWidth) + ((slider.settings.maxSlides - 1) * slider.settings.slideMargin);\n        } else {\n          width = slider.settings.slideWidth;\n        }\n      }\n      return width;\n    };\n\n    /**\n     * Returns the calculated width to be applied to each slide\n     */\n    var getSlideWidth = function() {\n      var newElWidth = slider.settings.slideWidth, // start with any user-supplied slide width\n      wrapWidth      = slider.viewport.width();    // get the current viewport width\n      // if slide width was not supplied, or is larger than the viewport use the viewport width\n      if (slider.settings.slideWidth === 0 ||\n        (slider.settings.slideWidth > wrapWidth && !slider.carousel) ||\n        slider.settings.mode === 'vertical') {\n        newElWidth = wrapWidth;\n      // if carousel, use the thresholds to determine the width\n      } else if (slider.settings.maxSlides > 1 && slider.settings.mode === 'horizontal') {\n        if (wrapWidth > slider.maxThreshold) {\n          return newElWidth;\n        } else if (wrapWidth < slider.minThreshold) {\n          newElWidth = (wrapWidth - (slider.settings.slideMargin * (slider.settings.minSlides - 1))) / slider.settings.minSlides;\n        } else if (slider.settings.shrinkItems) {\n          newElWidth = Math.floor((wrapWidth + slider.settings.slideMargin) / (Math.ceil((wrapWidth + slider.settings.slideMargin) / (newElWidth + slider.settings.slideMargin))) - slider.settings.slideMargin);\n        }\n      }\n      return newElWidth;\n    };\n\n    /**\n     * Returns the number of slides currently visible in the viewport (includes partially visible slides)\n     */\n    var getNumberSlidesShowing = function() {\n      var slidesShowing = 1,\n      childWidth = null;\n      if (slider.settings.mode === 'horizontal' && slider.settings.slideWidth > 0) {\n        // if viewport is smaller than minThreshold, return minSlides\n        if (slider.viewport.width() < slider.minThreshold) {\n          slidesShowing = slider.settings.minSlides;\n        // if viewport is larger than maxThreshold, return maxSlides\n        } else if (slider.viewport.width() > slider.maxThreshold) {\n          slidesShowing = slider.settings.maxSlides;\n        // if viewport is between min / max thresholds, divide viewport width by first child width\n        } else {\n          childWidth = slider.children.first().width() + slider.settings.slideMargin;\n          slidesShowing = Math.floor((slider.viewport.width() +\n            slider.settings.slideMargin) / childWidth);\n        }\n      // if \"vertical\" mode, slides showing will always be minSlides\n      } else if (slider.settings.mode === 'vertical') {\n        slidesShowing = slider.settings.minSlides;\n      }\n      return slidesShowing;\n    };\n\n    /**\n     * Returns the number of pages (one full viewport of slides is one \"page\")\n     */\n    var getPagerQty = function() {\n      var pagerQty = 0,\n      breakPoint = 0,\n      counter = 0;\n      // if moveSlides is specified by the user\n      if (slider.settings.moveSlides > 0) {\n        if (slider.settings.infiniteLoop) {\n          pagerQty = Math.ceil(slider.children.length / getMoveBy());\n        } else {\n          // when breakpoint goes above children length, counter is the number of pages\n          while (breakPoint < slider.children.length) {\n            ++pagerQty;\n            breakPoint = counter + getNumberSlidesShowing();\n            counter += slider.settings.moveSlides <= getNumberSlidesShowing() ? slider.settings.moveSlides : getNumberSlidesShowing();\n          }\n        }\n      // if moveSlides is 0 (auto) divide children length by sides showing, then round up\n      } else {\n        pagerQty = Math.ceil(slider.children.length / getNumberSlidesShowing());\n      }\n      return pagerQty;\n    };\n\n    /**\n     * Returns the number of individual slides by which to shift the slider\n     */\n    var getMoveBy = function() {\n      // if moveSlides was set by the user and moveSlides is less than number of slides showing\n      if (slider.settings.moveSlides > 0 && slider.settings.moveSlides <= getNumberSlidesShowing()) {\n        return slider.settings.moveSlides;\n      }\n      // if moveSlides is 0 (auto)\n      return getNumberSlidesShowing();\n    };\n\n    /**\n     * Sets the slider's (el) left or top position\n     */\n    var setSlidePosition = function() {\n      var position, lastChild, lastShowingIndex;\n      // if last slide, not infinite loop, and number of children is larger than specified maxSlides\n      if (slider.children.length > slider.settings.maxSlides && slider.active.last && !slider.settings.infiniteLoop) {\n        if (slider.settings.mode === 'horizontal') {\n          // get the last child's position\n          lastChild = slider.children.last();\n          position = lastChild.position();\n          // set the left position\n          setPositionProperty(-(position.left - (slider.viewport.width() - lastChild.outerWidth())), 'reset', 0);\n        } else if (slider.settings.mode === 'vertical') {\n          // get the last showing index's position\n          lastShowingIndex = slider.children.length - slider.settings.minSlides;\n          position = slider.children.eq(lastShowingIndex).position();\n          // set the top position\n          setPositionProperty(-position.top, 'reset', 0);\n        }\n      // if not last slide\n      } else {\n        // get the position of the first showing slide\n        position = slider.children.eq(slider.active.index * getMoveBy()).position();\n        // check for last slide\n        if (slider.active.index === getPagerQty() - 1) { slider.active.last = true; }\n        // set the respective position\n        if (position !== undefined) {\n          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }\n          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }\n        }\n      }\n    };\n\n    /**\n     * Sets the el's animating property position (which in turn will sometimes animate el).\n     * If using CSS, sets the transform property. If not using CSS, sets the top / left property.\n     *\n     * @param value (int)\n     *  - the animating property's value\n     *\n     * @param type (string) 'slide', 'reset', 'ticker'\n     *  - the type of instance for which the function is being\n     *\n     * @param duration (int)\n     *  - the amount of time (in ms) the transition should occupy\n     *\n     * @param params (array) optional\n     *  - an optional parameter containing any variables that need to be passed in\n     */\n    var setPositionProperty = function(value, type, duration, params) {\n      var animateObj, propValue;\n      // use CSS transform\n      if (slider.usingCSS) {\n        // determine the translate3d value\n        propValue = slider.settings.mode === 'vertical' ? 'translate3d(0, ' + value + 'px, 0)' : 'translate3d(' + value + 'px, 0, 0)';\n        // add the CSS transition-duration\n        el.css('-' + slider.cssPrefix + '-transition-duration', duration / 1000 + 's');\n        if (type === 'slide') {\n          // set the property value\n          el.css(slider.animProp, propValue);\n          if (duration !== 0) {\n            // bind a callback method - executes when CSS transition completes\n            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {\n              //make sure it's the correct one\n              if (!$(e.target).is(el)) { return; }\n              // unbind the callback\n              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n              updateAfterSlideTransition();\n            });\n          } else { //duration = 0\n            updateAfterSlideTransition();\n          }\n        } else if (type === 'reset') {\n          el.css(slider.animProp, propValue);\n        } else if (type === 'ticker') {\n          // make the transition use 'linear'\n          el.css('-' + slider.cssPrefix + '-transition-timing-function', 'linear');\n          el.css(slider.animProp, propValue);\n          if (duration !== 0) {\n            el.bind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd', function(e) {\n              //make sure it's the correct one\n              if (!$(e.target).is(el)) { return; }\n              // unbind the callback\n              el.unbind('transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd');\n              // reset the position\n              setPositionProperty(params.resetValue, 'reset', 0);\n              // start the loop again\n              tickerLoop();\n            });\n          } else { //duration = 0\n            setPositionProperty(params.resetValue, 'reset', 0);\n            tickerLoop();\n          }\n        }\n      // use JS animate\n      } else {\n        animateObj = {};\n        animateObj[slider.animProp] = value;\n        if (type === 'slide') {\n          el.animate(animateObj, duration, slider.settings.easing, function() {\n            updateAfterSlideTransition();\n          });\n        } else if (type === 'reset') {\n          el.css(slider.animProp, value);\n        } else if (type === 'ticker') {\n          el.animate(animateObj, duration, 'linear', function() {\n            setPositionProperty(params.resetValue, 'reset', 0);\n            // run the recursive loop after animation\n            tickerLoop();\n          });\n        }\n      }\n    };\n\n    /**\n     * Populates the pager with proper amount of pages\n     */\n    var populatePager = function() {\n      var pagerHtml = '',\n      linkContent = '',\n      pagerQty = getPagerQty();\n      // loop through each pager item\n      for (var i = 0; i < pagerQty; i++) {\n        linkContent = '';\n        // if a buildPager function is supplied, use it to get pager link value, else use index + 1\n        if (slider.settings.buildPager && $.isFunction(slider.settings.buildPager) || slider.settings.pagerCustom) {\n          linkContent = slider.settings.buildPager(i);\n          slider.pagerEl.addClass('bx-custom-pager');\n        } else {\n          linkContent = i + 1;\n          slider.pagerEl.addClass('bx-default-pager');\n        }\n        // var linkContent = slider.settings.buildPager && $.isFunction(slider.settings.buildPager) ? slider.settings.buildPager(i) : i + 1;\n        // add the markup to the string\n        pagerHtml += '<div class=\"bx-pager-item\"><a href=\"\" data-slide-index=\"' + i + '\" class=\"bx-pager-link\">' + linkContent + '</a></div>';\n      }\n      // populate the pager element with pager links\n      slider.pagerEl.html(pagerHtml);\n    };\n\n    /**\n     * Appends the pager to the controls element\n     */\n    var appendPager = function() {\n      if (!slider.settings.pagerCustom) {\n        // create the pager DOM element\n        slider.pagerEl = $('<div class=\"bx-pager\" />');\n        // if a pager selector was supplied, populate it with the pager\n        if (slider.settings.pagerSelector) {\n          $(slider.settings.pagerSelector).html(slider.pagerEl);\n        // if no pager selector was supplied, add it after the wrapper\n        } else {\n          slider.controls.el.addClass('bx-has-pager').append(slider.pagerEl);\n        }\n        // populate the pager\n        populatePager();\n      } else {\n        slider.pagerEl = $(slider.settings.pagerCustom);\n      }\n      // assign the pager click binding\n      slider.pagerEl.on('click touchend', 'a', clickPagerBind);\n    };\n\n    /**\n     * Appends prev / next controls to the controls element\n     */\n    var appendControls = function() {\n      slider.controls.next = $('<a class=\"bx-next\" href=\"\">' + slider.settings.nextText + '</a>');\n      slider.controls.prev = $('<a class=\"bx-prev\" href=\"\">' + slider.settings.prevText + '</a>');\n      // bind click actions to the controls\n      slider.controls.next.bind('click touchend', clickNextBind);\n      slider.controls.prev.bind('click touchend', clickPrevBind);\n      // if nextSelector was supplied, populate it\n      if (slider.settings.nextSelector) {\n        $(slider.settings.nextSelector).append(slider.controls.next);\n      }\n      // if prevSelector was supplied, populate it\n      if (slider.settings.prevSelector) {\n        $(slider.settings.prevSelector).append(slider.controls.prev);\n      }\n      // if no custom selectors were supplied\n      if (!slider.settings.nextSelector && !slider.settings.prevSelector) {\n        // add the controls to the DOM\n        slider.controls.directionEl = $('<div class=\"bx-controls-direction\" />');\n        // add the control elements to the directionEl\n        slider.controls.directionEl.append(slider.controls.prev).append(slider.controls.next);\n        // slider.viewport.append(slider.controls.directionEl);\n        slider.controls.el.addClass('bx-has-controls-direction').append(slider.controls.directionEl);\n      }\n    };\n\n    /**\n     * Appends start / stop auto controls to the controls element\n     */\n    var appendControlsAuto = function() {\n      slider.controls.start = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-start\" href=\"\">' + slider.settings.startText + '</a></div>');\n      slider.controls.stop = $('<div class=\"bx-controls-auto-item\"><a class=\"bx-stop\" href=\"\">' + slider.settings.stopText + '</a></div>');\n      // add the controls to the DOM\n      slider.controls.autoEl = $('<div class=\"bx-controls-auto\" />');\n      // bind click actions to the controls\n      slider.controls.autoEl.on('click', '.bx-start', clickStartBind);\n      slider.controls.autoEl.on('click', '.bx-stop', clickStopBind);\n      // if autoControlsCombine, insert only the \"start\" control\n      if (slider.settings.autoControlsCombine) {\n        slider.controls.autoEl.append(slider.controls.start);\n      // if autoControlsCombine is false, insert both controls\n      } else {\n        slider.controls.autoEl.append(slider.controls.start).append(slider.controls.stop);\n      }\n      // if auto controls selector was supplied, populate it with the controls\n      if (slider.settings.autoControlsSelector) {\n        $(slider.settings.autoControlsSelector).html(slider.controls.autoEl);\n      // if auto controls selector was not supplied, add it after the wrapper\n      } else {\n        slider.controls.el.addClass('bx-has-controls-auto').append(slider.controls.autoEl);\n      }\n      // update the auto controls\n      updateAutoControls(slider.settings.autoStart ? 'stop' : 'start');\n    };\n\n    /**\n     * Appends image captions to the DOM\n     */\n    var appendCaptions = function() {\n      // cycle through each child\n      slider.children.each(function(index) {\n        // get the image title attribute\n        var title = $(this).find('img:first').attr('title');\n        // append the caption\n        if (title !== undefined && ('' + title).length) {\n          $(this).append('<div class=\"bx-caption\"><span>' + title + '</span></div>');\n        }\n      });\n    };\n\n    /**\n     * Click next binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickNextBind = function(e) {\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) { return; }\n      // if auto show is running, stop it\n      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      el.goToNextSlide();\n    };\n\n    /**\n     * Click prev binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickPrevBind = function(e) {\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) { return; }\n      // if auto show is running, stop it\n      if (slider.settings.auto && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      el.goToPrevSlide();\n    };\n\n    /**\n     * Click start binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickStartBind = function(e) {\n      el.startAuto();\n      e.preventDefault();\n    };\n\n    /**\n     * Click stop binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickStopBind = function(e) {\n      el.stopAuto();\n      e.preventDefault();\n    };\n\n    /**\n     * Click pager binding\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var clickPagerBind = function(e) {\n      var pagerLink, pagerIndex;\n      e.preventDefault();\n      if (slider.controls.el.hasClass('disabled')) {\n        return;\n      }\n      // if auto show is running, stop it\n      if (slider.settings.auto  && slider.settings.stopAutoOnClick) { el.stopAuto(); }\n      pagerLink = $(e.currentTarget);\n      if (pagerLink.attr('data-slide-index') !== undefined) {\n        pagerIndex = parseInt(pagerLink.attr('data-slide-index'));\n        // if clicked pager link is not active, continue with the goToSlide call\n        if (pagerIndex !== slider.active.index) { el.goToSlide(pagerIndex); }\n      }\n    };\n\n    /**\n     * Updates the pager links with an active class\n     *\n     * @param slideIndex (int)\n     *  - index of slide to make active\n     */\n    var updatePagerActive = function(slideIndex) {\n      // if \"short\" pager type\n      var len = slider.children.length; // nb of children\n      if (slider.settings.pagerType === 'short') {\n        if (slider.settings.maxSlides > 1) {\n          len = Math.ceil(slider.children.length / slider.settings.maxSlides);\n        }\n        slider.pagerEl.html((slideIndex + 1) + slider.settings.pagerShortSeparator + len);\n        return;\n      }\n      // remove all pager active classes\n      slider.pagerEl.find('a').removeClass('active');\n      // apply the active class for all pagers\n      slider.pagerEl.each(function(i, el) { $(el).find('a').eq(slideIndex).addClass('active'); });\n    };\n\n    /**\n     * Performs needed actions after a slide transition\n     */\n    var updateAfterSlideTransition = function() {\n      // if infinite loop is true\n      if (slider.settings.infiniteLoop) {\n        var position = '';\n        // first slide\n        if (slider.active.index === 0) {\n          // set the new position\n          position = slider.children.eq(0).position();\n        // carousel, last slide\n        } else if (slider.active.index === getPagerQty() - 1 && slider.carousel) {\n          position = slider.children.eq((getPagerQty() - 1) * getMoveBy()).position();\n        // last slide\n        } else if (slider.active.index === slider.children.length - 1) {\n          position = slider.children.eq(slider.children.length - 1).position();\n        }\n        if (position) {\n          if (slider.settings.mode === 'horizontal') { setPositionProperty(-position.left, 'reset', 0); }\n          else if (slider.settings.mode === 'vertical') { setPositionProperty(-position.top, 'reset', 0); }\n        }\n      }\n      // declare that the transition is complete\n      slider.working = false;\n      // onSlideAfter callback\n      slider.settings.onSlideAfter.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n    };\n\n    /**\n     * Updates the auto controls state (either active, or combined switch)\n     *\n     * @param state (string) \"start\", \"stop\"\n     *  - the new state of the auto show\n     */\n    var updateAutoControls = function(state) {\n      // if autoControlsCombine is true, replace the current control with the new state\n      if (slider.settings.autoControlsCombine) {\n        slider.controls.autoEl.html(slider.controls[state]);\n      // if autoControlsCombine is false, apply the \"active\" class to the appropriate control\n      } else {\n        slider.controls.autoEl.find('a').removeClass('active');\n        slider.controls.autoEl.find('a:not(.bx-' + state + ')').addClass('active');\n      }\n    };\n\n    /**\n     * Updates the direction controls (checks if either should be hidden)\n     */\n    var updateDirectionControls = function() {\n      if (getPagerQty() === 1) {\n        slider.controls.prev.addClass('disabled');\n        slider.controls.next.addClass('disabled');\n      } else if (!slider.settings.infiniteLoop && slider.settings.hideControlOnEnd) {\n        // if first slide\n        if (slider.active.index === 0) {\n          slider.controls.prev.addClass('disabled');\n          slider.controls.next.removeClass('disabled');\n        // if last slide\n        } else if (slider.active.index === getPagerQty() - 1) {\n          slider.controls.next.addClass('disabled');\n          slider.controls.prev.removeClass('disabled');\n        // if any slide in the middle\n        } else {\n          slider.controls.prev.removeClass('disabled');\n          slider.controls.next.removeClass('disabled');\n        }\n      }\n    };\n\n    /**\n     * Initializes the auto process\n     */\n    var initAuto = function() {\n      // if autoDelay was supplied, launch the auto show using a setTimeout() call\n      if (slider.settings.autoDelay > 0) {\n        var timeout = setTimeout(el.startAuto, slider.settings.autoDelay);\n      // if autoDelay was not supplied, start the auto show normally\n      } else {\n        el.startAuto();\n\n        //add focus and blur events to ensure its running if timeout gets paused\n        $(window).focus(function() {\n          el.startAuto();\n        }).blur(function() {\n          el.stopAuto();\n        });\n      }\n      // if autoHover is requested\n      if (slider.settings.autoHover) {\n        // on el hover\n        el.hover(function() {\n          // if the auto show is currently playing (has an active interval)\n          if (slider.interval) {\n            // stop the auto show and pass true argument which will prevent control update\n            el.stopAuto(true);\n            // create a new autoPaused value which will be used by the relative \"mouseout\" event\n            slider.autoPaused = true;\n          }\n        }, function() {\n          // if the autoPaused value was created be the prior \"mouseover\" event\n          if (slider.autoPaused) {\n            // start the auto show and pass true argument which will prevent control update\n            el.startAuto(true);\n            // reset the autoPaused value\n            slider.autoPaused = null;\n          }\n        });\n      }\n    };\n\n    /**\n     * Initializes the ticker process\n     */\n    var initTicker = function() {\n      var startPosition = 0,\n      position, transform, value, idx, ratio, property, newSpeed, totalDimens;\n      // if autoDirection is \"next\", append a clone of the entire slider\n      if (slider.settings.autoDirection === 'next') {\n        el.append(slider.children.clone().addClass('bx-clone'));\n      // if autoDirection is \"prev\", prepend a clone of the entire slider, and set the left position\n      } else {\n        el.prepend(slider.children.clone().addClass('bx-clone'));\n        position = slider.children.first().position();\n        startPosition = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n      }\n      setPositionProperty(startPosition, 'reset', 0);\n      // do not allow controls in ticker mode\n      slider.settings.pager = false;\n      slider.settings.controls = false;\n      slider.settings.autoControls = false;\n      // if autoHover is requested\n      if (slider.settings.tickerHover) {\n        if (slider.usingCSS) {\n          idx = slider.settings.mode === 'horizontal' ? 4 : 5;\n          slider.viewport.hover(function() {\n            transform = el.css('-' + slider.cssPrefix + '-transform');\n            value = parseFloat(transform.split(',')[idx]);\n            setPositionProperty(value, 'reset', 0);\n          }, function() {\n            totalDimens = 0;\n            slider.children.each(function(index) {\n              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n            });\n            // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n            ratio = slider.settings.speed / totalDimens;\n            // determine which property to use\n            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n            // calculate the new speed\n            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(value))));\n            tickerLoop(newSpeed);\n          });\n        } else {\n          // on el hover\n          slider.viewport.hover(function() {\n            el.stop();\n          }, function() {\n            // calculate the total width of children (used to calculate the speed ratio)\n            totalDimens = 0;\n            slider.children.each(function(index) {\n              totalDimens += slider.settings.mode === 'horizontal' ? $(this).outerWidth(true) : $(this).outerHeight(true);\n            });\n            // calculate the speed ratio (used to determine the new speed to finish the paused animation)\n            ratio = slider.settings.speed / totalDimens;\n            // determine which property to use\n            property = slider.settings.mode === 'horizontal' ? 'left' : 'top';\n            // calculate the new speed\n            newSpeed = ratio * (totalDimens - (Math.abs(parseInt(el.css(property)))));\n            tickerLoop(newSpeed);\n          });\n        }\n      }\n      // start the ticker loop\n      tickerLoop();\n    };\n\n    /**\n     * Runs a continuous loop, news ticker-style\n     */\n    var tickerLoop = function(resumeSpeed) {\n      var speed = resumeSpeed ? resumeSpeed : slider.settings.speed,\n      position = {left: 0, top: 0},\n      reset = {left: 0, top: 0},\n      animateProperty, resetValue, params;\n\n      // if \"next\" animate left position to last child, then reset left to 0\n      if (slider.settings.autoDirection === 'next') {\n        position = el.find('.bx-clone').first().position();\n      // if \"prev\" animate left position to 0, then reset left to first non-clone child\n      } else {\n        reset = slider.children.first().position();\n      }\n      animateProperty = slider.settings.mode === 'horizontal' ? -position.left : -position.top;\n      resetValue = slider.settings.mode === 'horizontal' ? -reset.left : -reset.top;\n      params = {resetValue: resetValue};\n      setPositionProperty(animateProperty, 'ticker', speed, params);\n    };\n\n    /**\n     * Check if el is on screen\n     */\n    var isOnScreen = function(el) {\n      var win = $(window),\n      viewport = {\n        top: win.scrollTop(),\n        left: win.scrollLeft()\n      },\n      bounds = el.offset();\n\n      viewport.right = viewport.left + win.width();\n      viewport.bottom = viewport.top + win.height();\n      bounds.right = bounds.left + el.outerWidth();\n      bounds.bottom = bounds.top + el.outerHeight();\n\n      return (!(viewport.right < bounds.left || viewport.left > bounds.right || viewport.bottom < bounds.top || viewport.top > bounds.bottom));\n    };\n\n    /**\n     * Initializes keyboard events\n     */\n    var keyPress = function(e) {\n      var activeElementTag = document.activeElement.tagName.toLowerCase(),\n      tagFilters = 'input|textarea',\n      p = new RegExp(activeElementTag,['i']),\n      result = p.exec(tagFilters);\n\n      if (result == null && isOnScreen(el)) {\n        if (e.keyCode === 39) {\n          clickNextBind(e);\n          return false;\n        } else if (e.keyCode === 37) {\n          clickPrevBind(e);\n          return false;\n        }\n      }\n    };\n\n    /**\n     * Initializes touch events\n     */\n    var initTouch = function() {\n      // initialize object to contain all touch values\n      slider.touch = {\n        start: {x: 0, y: 0},\n        end: {x: 0, y: 0}\n      };\n      slider.viewport.bind('touchstart MSPointerDown pointerdown', onTouchStart);\n\n      //for browsers that have implemented pointer events and fire a click after\n      //every pointerup regardless of whether pointerup is on same screen location as pointerdown or not\n      slider.viewport.on('click', '.bxslider a', function(e) {\n        if (slider.viewport.hasClass('click-disabled')) {\n          e.preventDefault();\n          slider.viewport.removeClass('click-disabled');\n        }\n      });\n    };\n\n    /**\n     * Event handler for \"touchstart\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchStart = function(e) {\n      //disable slider controls while user is interacting with slides to avoid slider freeze that happens on touch devices when a slide swipe happens immediately after interacting with slider controls\n      slider.controls.el.addClass('disabled');\n\n      if (slider.working) {\n        e.preventDefault();\n        slider.controls.el.removeClass('disabled');\n      } else {\n        // record the original position when touch starts\n        slider.touch.originalPos = el.position();\n        var orig = e.originalEvent,\n        touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig];\n        // record the starting touch x, y coordinates\n        slider.touch.start.x = touchPoints[0].pageX;\n        slider.touch.start.y = touchPoints[0].pageY;\n\n        if (slider.viewport.get(0).setPointerCapture) {\n          slider.pointerId = orig.pointerId;\n          slider.viewport.get(0).setPointerCapture(slider.pointerId);\n        }\n        // bind a \"touchmove\" event to the viewport\n        slider.viewport.bind('touchmove MSPointerMove pointermove', onTouchMove);\n        // bind a \"touchend\" event to the viewport\n        slider.viewport.bind('touchend MSPointerUp pointerup', onTouchEnd);\n        slider.viewport.bind('MSPointerCancel pointercancel', onPointerCancel);\n      }\n    };\n\n    /**\n     * Cancel Pointer for Windows Phone\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onPointerCancel = function(e) {\n      /* onPointerCancel handler is needed to deal with situations when a touchend\n      doesn't fire after a touchstart (this happens on windows phones only) */\n      setPositionProperty(slider.touch.originalPos.left, 'reset', 0);\n\n      //remove handlers\n      slider.controls.el.removeClass('disabled');\n      slider.viewport.unbind('MSPointerCancel pointercancel', onPointerCancel);\n      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n      if (slider.viewport.get(0).releasePointerCapture) {\n        slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n      }\n    };\n\n    /**\n     * Event handler for \"touchmove\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchMove = function(e) {\n      var orig = e.originalEvent,\n      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n      // if scrolling on y axis, do not prevent default\n      xMovement = Math.abs(touchPoints[0].pageX - slider.touch.start.x),\n      yMovement = Math.abs(touchPoints[0].pageY - slider.touch.start.y),\n      value = 0,\n      change = 0;\n\n      // x axis swipe\n      if ((xMovement * 3) > yMovement && slider.settings.preventDefaultSwipeX) {\n        e.preventDefault();\n      // y axis swipe\n      } else if ((yMovement * 3) > xMovement && slider.settings.preventDefaultSwipeY) {\n        e.preventDefault();\n      }\n      if (slider.settings.mode !== 'fade' && slider.settings.oneToOneTouch) {\n        // if horizontal, drag along x axis\n        if (slider.settings.mode === 'horizontal') {\n          change = touchPoints[0].pageX - slider.touch.start.x;\n          value = slider.touch.originalPos.left + change;\n        // if vertical, drag along y axis\n        } else {\n          change = touchPoints[0].pageY - slider.touch.start.y;\n          value = slider.touch.originalPos.top + change;\n        }\n        setPositionProperty(value, 'reset', 0);\n      }\n    };\n\n    /**\n     * Event handler for \"touchend\"\n     *\n     * @param e (event)\n     *  - DOM event object\n     */\n    var onTouchEnd = function(e) {\n      slider.viewport.unbind('touchmove MSPointerMove pointermove', onTouchMove);\n      //enable slider controls as soon as user stops interacing with slides\n      slider.controls.el.removeClass('disabled');\n      var orig    = e.originalEvent,\n      touchPoints = (typeof orig.changedTouches !== 'undefined') ? orig.changedTouches : [orig],\n      value       = 0,\n      distance    = 0;\n      // record end x, y positions\n      slider.touch.end.x = touchPoints[0].pageX;\n      slider.touch.end.y = touchPoints[0].pageY;\n      // if fade mode, check if absolute x distance clears the threshold\n      if (slider.settings.mode === 'fade') {\n        distance = Math.abs(slider.touch.start.x - slider.touch.end.x);\n        if (distance >= slider.settings.swipeThreshold) {\n          if (slider.touch.start.x > slider.touch.end.x) {\n            el.goToNextSlide();\n          } else {\n            el.goToPrevSlide();\n          }\n          el.stopAuto();\n        }\n      // not fade mode\n      } else {\n        // calculate distance and el's animate property\n        if (slider.settings.mode === 'horizontal') {\n          distance = slider.touch.end.x - slider.touch.start.x;\n          value = slider.touch.originalPos.left;\n        } else {\n          distance = slider.touch.end.y - slider.touch.start.y;\n          value = slider.touch.originalPos.top;\n        }\n        // if not infinite loop and first / last slide, do not attempt a slide transition\n        if (!slider.settings.infiniteLoop && ((slider.active.index === 0 && distance > 0) || (slider.active.last && distance < 0))) {\n          setPositionProperty(value, 'reset', 200);\n        } else {\n          // check if distance clears threshold\n          if (Math.abs(distance) >= slider.settings.swipeThreshold) {\n            if (distance < 0) {\n              el.goToNextSlide();\n            } else {\n              el.goToPrevSlide();\n            }\n            el.stopAuto();\n          } else {\n            // el.animate(property, 200);\n            setPositionProperty(value, 'reset', 200);\n          }\n        }\n      }\n      slider.viewport.unbind('touchend MSPointerUp pointerup', onTouchEnd);\n      if (slider.viewport.get(0).releasePointerCapture) {\n        slider.viewport.get(0).releasePointerCapture(slider.pointerId);\n      }\n    };\n\n    /**\n     * Window resize event callback\n     */\n    var resizeWindow = function(e) {\n      // don't do anything if slider isn't initialized.\n      if (!slider.initialized) { return; }\n      // Delay if slider working.\n      if (slider.working) {\n        window.setTimeout(resizeWindow, 10);\n      } else {\n        // get the new window dimens (again, thank you IE)\n        var windowWidthNew = $(window).width(),\n        windowHeightNew = $(window).height();\n        // make sure that it is a true window resize\n        // *we must check this because our dinosaur friend IE fires a window resize event when certain DOM elements\n        // are resized. Can you just die already?*\n        if (windowWidth !== windowWidthNew || windowHeight !== windowHeightNew) {\n          // set the new window dimens\n          windowWidth = windowWidthNew;\n          windowHeight = windowHeightNew;\n          // update all dynamic elements\n          el.redrawSlider();\n          // Call user resize handler\n          slider.settings.onSliderResize.call(el, slider.active.index);\n        }\n      }\n    };\n\n    /**\n     * Adds an aria-hidden=true attribute to each element\n     *\n     * @param startVisibleIndex (int)\n     *  - the first visible element's index\n     */\n    var applyAriaHiddenAttributes = function(startVisibleIndex) {\n      var numberOfSlidesShowing = getNumberSlidesShowing();\n      // only apply attributes if the setting is enabled and not in ticker mode\n      if (slider.settings.ariaHidden && !slider.settings.ticker) {\n        // add aria-hidden=true to all elements\n        slider.children.attr('aria-hidden', 'true');\n        // get the visible elements and change to aria-hidden=false\n        slider.children.slice(startVisibleIndex, startVisibleIndex + numberOfSlidesShowing).attr('aria-hidden', 'false');\n      }\n    };\n\n    /**\n     * Returns index according to present page range\n     *\n     * @param slideOndex (int)\n     *  - the desired slide index\n     */\n    var setSlideIndex = function(slideIndex) {\n      if (slideIndex < 0) {\n        if (slider.settings.infiniteLoop) {\n          return getPagerQty() - 1;\n        }else {\n          //we don't go to undefined slides\n          return slider.active.index;\n        }\n      // if slideIndex is greater than children length, set active index to 0 (this happens during infinite loop)\n      } else if (slideIndex >= getPagerQty()) {\n        if (slider.settings.infiniteLoop) {\n          return 0;\n        } else {\n          //we don't move to undefined pages\n          return slider.active.index;\n        }\n      // set active index to requested slide\n      } else {\n        return slideIndex;\n      }\n    };\n\n    /**\n     * ===================================================================================\n     * = PUBLIC FUNCTIONS\n     * ===================================================================================\n     */\n\n    /**\n     * Performs slide transition to the specified slide\n     *\n     * @param slideIndex (int)\n     *  - the destination slide's index (zero-based)\n     *\n     * @param direction (string)\n     *  - INTERNAL USE ONLY - the direction of travel (\"prev\" / \"next\")\n     */\n    el.goToSlide = function(slideIndex, direction) {\n      // onSlideBefore, onSlideNext, onSlidePrev callbacks\n      // Allow transition canceling based on returned value\n      var performTransition = true,\n      moveBy = 0,\n      position = {left: 0, top: 0},\n      lastChild = null,\n      lastShowingIndex, eq, value, requestEl;\n      // store the old index\n      slider.oldIndex = slider.active.index;\n      //set new index\n      slider.active.index = setSlideIndex(slideIndex);\n\n      // if plugin is currently in motion, ignore request\n      if (slider.working || slider.active.index === slider.oldIndex) { return; }\n      // declare that plugin is in motion\n      slider.working = true;\n\n      performTransition = slider.settings.onSlideBefore.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index);\n\n      // If transitions canceled, reset and return\n      if (typeof (performTransition) !== 'undefined' && !performTransition) {\n        slider.active.index = slider.oldIndex; // restore old index\n        slider.working = false; // is not in motion\n        return;\n      }\n\n      if (direction === 'next') {\n        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n        if (!slider.settings.onSlideNext.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n          performTransition = false;\n        }\n      } else if (direction === 'prev') {\n        // Prevent canceling in future functions or lack there-of from negating previous commands to cancel\n        if (!slider.settings.onSlidePrev.call(el, slider.children.eq(slider.active.index), slider.oldIndex, slider.active.index)) {\n          performTransition = false;\n        }\n      }\n\n      // check if last slide\n      slider.active.last = slider.active.index >= getPagerQty() - 1;\n      // update the pager with active class\n      if (slider.settings.pager || slider.settings.pagerCustom) { updatePagerActive(slider.active.index); }\n      // // check for direction control update\n      if (slider.settings.controls) { updateDirectionControls(); }\n      // if slider is set to mode: \"fade\"\n      if (slider.settings.mode === 'fade') {\n        // if adaptiveHeight is true and next height is different from current height, animate to the new height\n        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n        }\n        // fade out the visible child and reset its z-index value\n        slider.children.filter(':visible').fadeOut(slider.settings.speed).css({zIndex: 0});\n        // fade in the newly requested slide\n        slider.children.eq(slider.active.index).css('zIndex', slider.settings.slideZIndex + 1).fadeIn(slider.settings.speed, function() {\n          $(this).css('zIndex', slider.settings.slideZIndex);\n          updateAfterSlideTransition();\n        });\n      // slider mode is not \"fade\"\n      } else {\n        // if adaptiveHeight is true and next height is different from current height, animate to the new height\n        if (slider.settings.adaptiveHeight && slider.viewport.height() !== getViewportHeight()) {\n          slider.viewport.animate({height: getViewportHeight()}, slider.settings.adaptiveHeightSpeed);\n        }\n        // if carousel and not infinite loop\n        if (!slider.settings.infiniteLoop && slider.carousel && slider.active.last) {\n          if (slider.settings.mode === 'horizontal') {\n            // get the last child position\n            lastChild = slider.children.eq(slider.children.length - 1);\n            position = lastChild.position();\n            // calculate the position of the last slide\n            moveBy = slider.viewport.width() - lastChild.outerWidth();\n          } else {\n            // get last showing index position\n            lastShowingIndex = slider.children.length - slider.settings.minSlides;\n            position = slider.children.eq(lastShowingIndex).position();\n          }\n          // horizontal carousel, going previous while on first slide (infiniteLoop mode)\n        } else if (slider.carousel && slider.active.last && direction === 'prev') {\n          // get the last child position\n          eq = slider.settings.moveSlides === 1 ? slider.settings.maxSlides - getMoveBy() : ((getPagerQty() - 1) * getMoveBy()) - (slider.children.length - slider.settings.maxSlides);\n          lastChild = el.children('.bx-clone').eq(eq);\n          position = lastChild.position();\n        // if infinite loop and \"Next\" is clicked on the last slide\n        } else if (direction === 'next' && slider.active.index === 0) {\n          // get the last clone position\n          position = el.find('> .bx-clone').eq(slider.settings.maxSlides).position();\n          slider.active.last = false;\n        // normal non-zero requests\n        } else if (slideIndex >= 0) {\n          //parseInt is applied to allow floats for slides/page\n          requestEl = slideIndex * parseInt(getMoveBy());\n          position = slider.children.eq(requestEl).position();\n        }\n\n        /* If the position doesn't exist\n         * (e.g. if you destroy the slider on a next click),\n         * it doesn't throw an error.\n         */\n        if (typeof (position) !== 'undefined') {\n          value = slider.settings.mode === 'horizontal' ? -(position.left - moveBy) : -position.top;\n          // plugin values to be animated\n          setPositionProperty(value, 'slide', slider.settings.speed);\n        } else {\n          slider.working = false;\n        }\n      }\n      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }\n    };\n\n    /**\n     * Transitions to the next slide in the show\n     */\n    el.goToNextSlide = function() {\n      // if infiniteLoop is false and last page is showing, disregard call\n      if (!slider.settings.infiniteLoop && slider.active.last) { return; }\n      var pagerIndex = parseInt(slider.active.index) + 1;\n      el.goToSlide(pagerIndex, 'next');\n    };\n\n    /**\n     * Transitions to the prev slide in the show\n     */\n    el.goToPrevSlide = function() {\n      // if infiniteLoop is false and last page is showing, disregard call\n      if (!slider.settings.infiniteLoop && slider.active.index === 0) { return; }\n      var pagerIndex = parseInt(slider.active.index) - 1;\n      el.goToSlide(pagerIndex, 'prev');\n    };\n\n    /**\n     * Starts the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated\n     */\n    el.startAuto = function(preventControlUpdate) {\n      // if an interval already exists, disregard call\n      if (slider.interval) { return; }\n      // create an interval\n      slider.interval = setInterval(function() {\n        if (slider.settings.autoDirection === 'next') {\n          el.goToNextSlide();\n        } else {\n          el.goToPrevSlide();\n        }\n      }, slider.settings.pause);\n      // if auto controls are displayed and preventControlUpdate is not true\n      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('stop'); }\n    };\n\n    /**\n     * Stops the auto show\n     *\n     * @param preventControlUpdate (boolean)\n     *  - if true, auto controls state will not be updated\n     */\n    el.stopAuto = function(preventControlUpdate) {\n      // if no interval exists, disregard call\n      if (!slider.interval) { return; }\n      // clear the interval\n      clearInterval(slider.interval);\n      slider.interval = null;\n      // if auto controls are displayed and preventControlUpdate is not true\n      if (slider.settings.autoControls && preventControlUpdate !== true) { updateAutoControls('start'); }\n    };\n\n    /**\n     * Returns current slide index (zero-based)\n     */\n    el.getCurrentSlide = function() {\n      return slider.active.index;\n    };\n\n    /**\n     * Returns current slide element\n     */\n    el.getCurrentSlideElement = function() {\n      return slider.children.eq(slider.active.index);\n    };\n\n    /**\n     * Returns a slide element\n     * @param index (int)\n     *  - The index (zero-based) of the element you want returned.\n     */\n    el.getSlideElement = function(index) {\n      return slider.children.eq(index);\n    };\n\n    /**\n     * Returns number of slides in show\n     */\n    el.getSlideCount = function() {\n      return slider.children.length;\n    };\n\n    /**\n     * Return slider.working variable\n     */\n    el.isWorking = function() {\n      return slider.working;\n    };\n\n    /**\n     * Update all dynamic slider elements\n     */\n    el.redrawSlider = function() {\n      // resize all children in ratio to new screen size\n      slider.children.add(el.find('.bx-clone')).outerWidth(getSlideWidth());\n      // adjust the height\n      slider.viewport.css('height', getViewportHeight());\n      // update the slide position\n      if (!slider.settings.ticker) { setSlidePosition(); }\n      // if active.last was true before the screen resize, we want\n      // to keep it last no matter what screen size we end on\n      if (slider.active.last) { slider.active.index = getPagerQty() - 1; }\n      // if the active index (page) no longer exists due to the resize, simply set the index as last\n      if (slider.active.index >= getPagerQty()) { slider.active.last = true; }\n      // if a pager is being displayed and a custom pager is not being used, update it\n      if (slider.settings.pager && !slider.settings.pagerCustom) {\n        populatePager();\n        updatePagerActive(slider.active.index);\n      }\n      if (slider.settings.ariaHidden) { applyAriaHiddenAttributes(slider.active.index * getMoveBy()); }\n    };\n\n    /**\n     * Destroy the current instance of the slider (revert everything back to original state)\n     */\n    el.destroySlider = function() {\n      // don't do anything if slider has already been destroyed\n      if (!slider.initialized) { return; }\n      slider.initialized = false;\n      $('.bx-clone', this).remove();\n      slider.children.each(function() {\n        if ($(this).data('origStyle') !== undefined) {\n          $(this).attr('style', $(this).data('origStyle'));\n        } else {\n          $(this).removeAttr('style');\n        }\n      });\n      if ($(this).data('origStyle') !== undefined) {\n        this.attr('style', $(this).data('origStyle'));\n      } else {\n        $(this).removeAttr('style');\n      }\n      $(this).unwrap().unwrap();\n      if (slider.controls.el) { slider.controls.el.remove(); }\n      if (slider.controls.next) { slider.controls.next.remove(); }\n      if (slider.controls.prev) { slider.controls.prev.remove(); }\n      if (slider.pagerEl && slider.settings.controls && !slider.settings.pagerCustom) { slider.pagerEl.remove(); }\n      $('.bx-caption', this).remove();\n      if (slider.controls.autoEl) { slider.controls.autoEl.remove(); }\n      clearInterval(slider.interval);\n      if (slider.settings.responsive) { $(window).unbind('resize', resizeWindow); }\n      if (slider.settings.keyboardEnabled) { $(document).unbind('keydown', keyPress); }\n      //remove self reference in data\n      $(this).removeData('bxSlider');\n    };\n\n    /**\n     * Reload the slider (revert all DOM changes, and re-initialize)\n     */\n    el.reloadSlider = function(settings) {\n      if (settings !== undefined) { options = settings; }\n      el.destroySlider();\n      init();\n      //store reference to self in order to access public functions later\n      $(el).data('bxSlider', this);\n    };\n\n    init();\n\n    $(el).data('bxSlider', this);\n\n    // returns the current jQuery object\n    return this;\n  };\n\n})(jQuery);\n","$(function () {\n    'use strict';\n    $('.bxslider').bxSlider();\n//Server start\n    let $ServerData =\n    {\n    id: 100,\n    data: [\n            {\n            id: 101,\n            title: \"Advanced Machinery Helps Improve Quality\",\n            month: 'Jan',\n            day: 23,\n            imageSrc: 'img/news1.jpg',\n            author: 'cmsmasters',\n            coments: 6,\n            text: \"Cum sociis natoque penatibus et magnis dis parturient ontesmus. Pro vel nibh et elit mollis commodo et nec augueique Nemo enim ipsam voluptatem quia ptas sit aspernatur samomo enim ipsam voluptatem.\"\n            },\n            {\n            id: 102,\n            title: \"Powerful Techniques for Advanced Service\",\n            month: 'Jan',\n            day: 21,\n            imageSrc: 'img/news2.jpg',\n            author: 'cmsmasters',\n            coments: 3,\n            text: \"Cum sociis natoque penatibus et magnis dis parturient ontesmus. Pro vel nibh et elit mollis commodo et nec augueique Nemo enim ipsam voluptatem quia ptas sit aspernatur samomo enim ipsam voluptatem.\"\n            }\n        ]\n    };\n    let $Server = JSON.stringify($ServerData);\n//Server end\n    let $jsData = JSON.parse($Server);\n    let $html = $('#latestNews').html();\n    let $dataTmpl = {\n        $data: $jsData\n    };\n    let $content = tmpl($html, $dataTmpl);\n    $('#latestNewsIn').html('');\n    $('#latestNewsIn').append($content);\n//banner-box\n    $('.accordion').on('click', '.accordion-panel, .accordion-plus', function(e) {\n        let elem = $(e.target);\n        Element();\n        function Element() {\n            if ( $('.panel').find('.accordion-panel-focus').length != 0 && (elem[0].className == 'accordion-panel' || elem[0].className == 'accordion-plus')) {\n                $('.panel').find('.accordion-panel').removeClass('accordion-panel-focus');\n                $('.panel').find('.accordion-plus').removeClass('accordion-plus-focus');\n                $('.panel').find('.panel-focus').removeClass('panel-focus');\n                $('.panel').find('.accordion-text').css('display', 'none');\n                $(e.target).parent().find('.accordion-panel').addClass('accordion-panel-focus');\n                $(e.target).parent().find('.accordion-plus').addClass('accordion-plus-focus');\n                $(e.target).parent().addClass('panel-focus');\n                $(e.target).parent().parent().find('.accordion-text').fadeIn(700);\n                return;\n            };\n            if ($('.panel').find('.accordion-panel-focus').length == 0) {\n                $(e.target).parent().find('.accordion-panel').addClass('accordion-panel-focus');\n                $(e.target).parent().find('.accordion-plus').addClass('accordion-plus-focus');\n                $(e.target).parent().addClass('panel-focus');\n                $(e.target).parent().parent().find('.accordion-text').fadeIn(700);\n                return;\n            };\n            if ($('.panel').find('.accordion-panel-focus').length != 0) {\n                $('.panel').find('.accordion-panel').removeClass('accordion-panel-focus');\n                $('.panel').find('.accordion-plus').removeClass('accordion-plus-focus');\n                $('.panel').find('.panel-focus').removeClass('panel-focus');\n                $('.panel').find('.accordion-text').css('display', 'none');\n                return;\n            };\n        }\n    });\n});\n","// see:\n// http://ejohn.org/blog/javascript-micro-templating/\n\n// Simple JavaScript Templating\n// John Resig - http://ejohn.org/ - MIT Licensed\n    'use strict';\n  let cache = {};\n  let tmpl = function tmpl(str, data){\n    // Figure out if we're getting a template, or if we need to\n    // load the template - and be sure to cache the result.\n    let fn = !/\\W/.test(str) ?\n      cache[str] = cache[str] ||\n        tmpl(document.getElementById(str).innerHTML) :\n      // Generate a reusable function that will serve as a template\n      // generator (and which will be cached).\n      new Function(\"obj\",\n        \"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n        // Introduce the data as local variables using with(){}\n        \"with(obj){p.push('\" +\n        // Convert the template into pure JavaScript\n        str\n          .replace(/[\\r\\t\\n]/g, \" \")\n          .split(\"<%\").join(\"\\t\")\n          .replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n          .replace(/\\t=(.*?)%>/g, \"',$1,'\")\n          .split(\"\\t\").join(\"');\")\n          .split(\"%>\").join(\"p.push('\")\n          .split(\"\\r\").join(\"\\\\'\")\n      + \"');}return p.join('');\");\n    // Provide some basic currying to the user\n    return data ? fn( data ) : fn;\n  };\n"]}